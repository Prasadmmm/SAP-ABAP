*&---------------------------------------------------------------------*
*& Report ZTRADIND_MP
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZTRADIND_MP.
 TYPES : BEGIN OF ty_file,
          date  TYPE D,
          price TYPE p DECIMALS 2,
          open  TYPE p DECIMALS 2,
          high  TYPE p DECIMALS 2,
          low   TYPE p DECIMALS 2,
        END OF ty_file.

DATA: it_trade TYPE TABLE OF ty_file,
      wa_trade LIKE LINE OF it_trade,
      prev_day TYPE zp2_trade-dclose,
      term TYPE string,
      invest_amnt TYPE p DECIMALS 2,
      withdrawal TYPE p DECIMALS 2,
      profit TYPE p DECIMALS 2.


PARAMETERS : p_file TYPE ibipparms-path,
            p_iamt TYPE p DECIMALS 2.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
   EXPORTING
     PROGRAM_NAME        = SYST-CPROG
     DYNPRO_NUMBER       = SYST-DYNNR
     FIELD_NAME          = ' P_FILE'
   IMPORTING
     FILE_NAME           = P_FILE
            .

  DATA v_file TYPE string.
  v_file = p_file.
 DATA it_file type TRUXS_T_TEXT_DATA.

* CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
*   EXPORTING
**    I_FIELD_SEPERATOR          =
*    I_LINE_HEADER              = ABAP_TRUE
*     i_tab_raw_data             = it_file
*     i_filename                 = p_file
**    I_STEP                     = 1
*   TABLES
*     i_tab_converted_data       = it_trade
*  EXCEPTIONS
*    CONVERSION_FAILED          = 1
*    OTHERS                     = 2
*           .
* IF sy-subrc <> 0.
** Implement suitable error handling here
        CALL FUNCTION 'GUI_UPLOAD'
          EXPORTING
            filename                      = v_file
           FILETYPE                      = 'ASC'
*           HAS_FIELD_SEPARATOR           = ' '
           HEADER_LENGTH                 = 0
*           READ_BY_LINE                  = 'X'
*           DAT_MODE                      = ' '
*           CODEPAGE                      = ' '
*           IGNORE_CERR                   = ABAP_TRUE
*           REPLACEMENT                   = '#'
*           CHECK_BOM                     = ' '
*           VIRUS_SCAN_PROFILE            =
*           NO_AUTH_CHECK                 = ' '
*         IMPORTING
*           FILELENGTH                    =
*           HEADER                        =
          tables
            data_tab                      = it_trade
*         CHANGING
*           ISSCANPERFORMED               = ' '
         EXCEPTIONS
           FILE_OPEN_ERROR               = 1
           FILE_READ_ERROR               = 2
           NO_BATCH                      = 3
           GUI_REFUSE_FILETRANSFER       = 4
           INVALID_TYPE                  = 5
           NO_AUTHORITY                  = 6
           UNKNOWN_ERROR                 = 7
           BAD_DATA_FORMAT               = 8
           HEADER_NOT_ALLOWED            = 9
           SEPARATOR_NOT_ALLOWED         = 10
           HEADER_TOO_LONG               = 11
           UNKNOWN_DP_ERROR              = 12
           ACCESS_DENIED                 = 13
           DP_OUT_OF_MEMORY              = 14
           DISK_FULL                     = 15
           DP_TIMEOUT                    = 16
           OTHERS                        = 17
                  .
        IF sy-subrc <> 0.
* Implement suitable error handling here
        ENDIF.
* ENDIF.


invest_amnt = p_iamt.

  LOOP AT it_trade INTO wa_trade.
    IF sy-tabix = 1.
      prev_day = wa_trade-price.
      CONTINUE.
    ENDIF.

* LOOP AT it_trade INTO wa_trade.
*    WRITE : / wa_trade-date,
*             15 wa_trade-price,
*             30 wa_trade-open,
*             50 wa_trade-high,
*             70 wa_trade-low.
*  ENDLOOP.


  IF wa_trade-open > prev_day.
    term = 'Long Term'.
  ELSEIF wa_trade-open < prev_day.
    term = 'Short Term'.
  ENDIF.

  WRITE : / 'TERM', term.


  prev_day = wa_trade-price.


  IF term = 'Long Term'.

    profit = ( wa_trade-high - invest_amnt ) / invest_amnt * 100.
    IF profit >= 2.
      withdrawal = wa_trade-high.
    ELSE.
      withdrawal = wa_trade-high.
    ENDIF.
  ELSEIF term = 'Short Term'.

    profit = ( invest_amnt - wa_trade-low ) / invest_amnt * 100.
    IF profit >= 2.
      withdrawal = wa_trade-low.
    ELSE.
      withdrawal = wa_trade-low.
    ENDIF.
  ENDIF.
endloop.

  WRITE : / 'Withdrawal Amount:', withdrawal.
